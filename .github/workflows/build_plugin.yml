name: Build Plugin
on:
  workflow_call:
    inputs:
      target_name:
        description: 'The desired name to build to'
        required: true
        type: string
      assembly_name:
        description: 'The safe name to build to'
        required: true
        type: string
      repo:
        description: 'The repository to trigger the build for'
        required: true
        type: string
      branch:
        description: 'The branch to build'
        required: true
        type: string
      build_config:
        description: 'The build configuration to use'
        required: true
        type: string
    secrets:
      BOT_READ_REPOS_TOKEN:
        description: 'A classic PAT with the full `repo` scope'
        required: true

jobs:
  build_plugin:
    runs-on: ubuntu-latest
    env:
      DALAMUD_HOME: $HOME/.xlcore/dalamud/Hooks/dev

    steps:
      # Debug Inputs
      - name: Debug Inputs
        run: |
          echo "target_name=${{ inputs.target_name }}"
          echo "assembly_name=${{ inputs.assembly_name }}"
          echo "repo=${{ inputs.repo }}"
          echo "branch=${{ inputs.branch }}"
          echo "build_config=${{ inputs.build_config }}"

      # Checkout the specific branch of the triggering repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.branch }}
          token: ${{ secrets.BOT_READ_REPOS_TOKEN }}
          submodules: recursive
          path: repo

      # Download Dalamud development tools
      - name: Download Dalamud
        id: download_dalamud
        run: |
          curl -L https://goatcorp.github.io/dalamud-distrib/latest.zip -o dalamud.zip
          mkdir -p ${{ env.DALAMUD_HOME }}
          unzip -o dalamud.zip -d ${{ env.DALAMUD_HOME }}
          echo "DALAMUD_HOME=${{ env.DALAMUD_HOME }}" >> $GITHUB_ENV

      # Setup folder to place builds into
      - name: Create Output Folder
        id: make_output_folder
        run: |
          dev_folder="${{ runner.temp }}/${{ inputs.assembly_name }}"
          mkdir -p "$dev_folder"
          echo "DalamudDevPlugins=$dev_folder" >> $GITHUB_ENV

      # Set up .NET
      - name: Set up .NET
        id: setup_net
        uses: actions/setup-dotnet@v4
        with:
          # noinspection UndefinedParamsPresent
          dotnet-version: '8.0.x'

      # todo: find csproj file and extract the version from it

      # Include the plugin's dependencies
      - name: Restore Dependencies
        run: |
          cd repo
          dotnet restore

      # Build the plugin
      - name: Build
        run: |
          cd repo
          build_config="${{ inputs.build_config }}"
          assembly_name="${{ inputs.assembly_name }}"
          echo "AssemblyName: $assembly_name"

      # todo: add zipping and moving to $HOME/builds